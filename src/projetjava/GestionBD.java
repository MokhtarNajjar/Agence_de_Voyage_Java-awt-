/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package projetjava;

import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLXML;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Mokh
 */
public class GestionBD extends javax.swing.JFrame {
    
    /**
     * Creates new form GestionBD
     */
    public GestionBD() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
  //  public ArrayList<Benefice> lt(){//return bl;}
  
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        button3 = new java.awt.Button();
        button7 = new java.awt.Button();
        button8 = new java.awt.Button();
        button5 = new java.awt.Button();
        button9 = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();
        button1 = new java.awt.Button();
        button4 = new java.awt.Button();
        button6 = new java.awt.Button();
        button2 = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        button3.setBackground(new java.awt.Color(255, 255, 102));
        button3.setLabel("Classement des destinations pour cette année selon leurs nombres de voyageurs ");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button7.setBackground(new java.awt.Color(255, 255, 102));
        button7.setLabel("Classement des destinations pour ce mois selon leurs nombres des voyageurs ");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        button8.setBackground(new java.awt.Color(255, 255, 102));
        button8.setLabel("Classement des destinations pour cette semaine selon leurs bénéfices");
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        button5.setBackground(new java.awt.Color(255, 255, 102));
        button5.setLabel("Classement des destinations pour ce moin selon leurs bénéfices");
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button9.setBackground(new java.awt.Color(255, 255, 102));
        button9.setLabel("Classement des destinations pour cette année selon leurs bénéfices");
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        tab.setBackground(new java.awt.Color(0, 51, 51));
        tab.setFont(new java.awt.Font("NSimSun", 0, 12)); // NOI18N
        tab.setForeground(new java.awt.Color(255, 153, 0));
        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tab.setAutoscrolls(false);
        jScrollPane1.setViewportView(tab);

        button1.setBackground(new java.awt.Color(255, 255, 102));
        button1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        button1.setLabel("Classement de Destinations selon Nombre de Voyageurs");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button4.setBackground(new java.awt.Color(102, 102, 255));
        button4.setLabel("Acceil");
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button6.setBackground(new java.awt.Color(102, 102, 255));
        button6.setLabel("Previous");
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        button2.setBackground(new java.awt.Color(255, 255, 102));
        button2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        button2.setLabel("Classement de Destinations selon Benefice");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        // TODO add your handling code here:
            ArrayList<Benefice> bl= new ArrayList();
tab.removeAll();

          DefaultTableModel model=(DefaultTableModel)tab.getModel();
String[] col = new String[2];
col[0]="Destination";
col[1]="Nombre de visiteurs";
model.setColumnIdentifiers(col);

int rowCount = model.getRowCount();
for (int i = rowCount - 1; i >= 0; i--) {
    model.removeRow(i);
}


            String url = "jdbc:mysql://localhost:3306/projet";
String login="root";
String password="";

try {
   Class.forName("com.mysql.jdbc.Driver");

Connection con = DriverManager.getConnection(url, login, password);
System.out.println("connection validé au DESTINATION \n");
Statement stmt2 = con.createStatement();

PreparedStatement stmt= con.prepareStatement("select destination, COUNT(*) as nombre_de_visite from reservations R \n" +
"where (year(CURDATE())=year(R.date))\n" +
"group by destination order by nombre_de_visite desc ;");

ResultSet rs=stmt.executeQuery();
ResultSetMetaData resultMeta = rs.getMetaData();
Benefice b;
while(rs.next()){
    b=new Benefice(rs.getString("destination"),rs.getInt("nombre_de_visite"));
    bl.add(b);
    //String best = rs.getObject(1).toString();
  
    //System.out.print("\t" + rs.getObject(i).toString() + "\t |");
    }
     
Object[] row = new Object[2];
for(int i=0;i<bl.size();i++){
row[0]=bl.get(i).getDes();
row[1]=bl.get(i).getben();
System.out.println(bl.get(i).getDes()+" "+bl.get(i).getben());
model.addRow(row);
}


 //   return bl;

con.close();
stmt.close();
stmt.close();
stmt2.close();

 // terminer le try
}    catch (Exception e) {
System.out.println(" Attention l'exception : " + e + "est arrivée");
} // fin de la capture de l'exception

        
             
   
    }//GEN-LAST:event_button3ActionPerformed
public void getValeurs()
{
String url = "jdbc:mysql://localhost:3306/projet";
String login="root";
String password="";

try {
   Class.forName("com.mysql.jdbc.Driver");

Connection con = DriverManager.getConnection(url, login, password);
System.out.println("connection validé au DESTINATION");
Statement stmt2 = con.createStatement();

PreparedStatement stmt= con.prepareStatement("select DESTINATION, SUM(D.BENEFICE) as benefice from reservations R,destinations D\n" +
"where DESTINATION=D.nom AND 2018=year(R.date)\n" +
"group by destination order by benefice desc ;");


ResultSet rs=stmt.executeQuery();
ResultSetMetaData resultMeta = rs.getMetaData();
 //System.out.println("\t CIN |" +"\t" +"destination "+"\t"+"Npmbre de visite "+"\t" );

while(rs.next()){
    for(int i = 1; i <= resultMeta.getColumnCount(); i++)
    
    {
        String best = rs.getObject(i).toString();
        String best2 = rs.getObject(i+1).toString();
     //String[]={best , best2};
    Object k=new String [][] {
        {best,  best2}
    };
//    this.jTable1
     System.out.print("\t" + rs.getObject(i).toString() + "\t |");
    }
    }      
        System.out.println("\n--------------------------------------------");
     

con.close();
stmt.close();
stmt.close();
stmt2.close();

} // terminer le try
catch (Exception e) {
System.out.println(" Attention l'exception : " + e + "est arrivée");
 // fin de la capture de l'exception
 
        }  
                                                   
    }                                       


    
    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
            ArrayList<Benefice> bl= new ArrayList();
tab.removeAll();

          DefaultTableModel model=(DefaultTableModel)tab.getModel();
String[] col = new String[2];
col[0]="Destination";
col[1]="Nombre de visiteurs";
model.setColumnIdentifiers(col);

int rowCount = model.getRowCount();
for (int i = rowCount - 1; i >= 0; i--) {
    model.removeRow(i);
}


            String url = "jdbc:mysql://localhost:3306/projet";
String login="root";
String password="";

try {
   Class.forName("com.mysql.jdbc.Driver");

Connection con = DriverManager.getConnection(url, login, password);
System.out.println("connection validé au DESTINATION \n");
Statement stmt2 = con.createStatement();

PreparedStatement stmt= con.prepareStatement("select destination, COUNT(*) as nombre_de_visite from reservations R \n" +
"group by destination order by nombre_de_visite desc ;");

ResultSet rs=stmt.executeQuery();
ResultSetMetaData resultMeta = rs.getMetaData();
Benefice b;
while(rs.next()){
    b=new Benefice(rs.getString("destination"),rs.getInt("nombre_de_visite"));
    bl.add(b);
    //String best = rs.getObject(1).toString();
  
    //System.out.print("\t" + rs.getObject(i).toString() + "\t |");
    }
     
Object[] row = new Object[2];
for(int i=0;i<bl.size();i++){
row[0]=bl.get(i).getDes();
row[1]=bl.get(i).getben();
System.out.println(bl.get(i).getDes()+" "+bl.get(i).getben());
model.addRow(row);
}


 //   return bl;

con.close();
stmt.close();
stmt.close();
stmt2.close();

 // terminer le try
}    catch (Exception e) {
System.out.println(" Attention l'exception : " + e + "est arrivée");
} // fin de la capture de l'exception

        
                                                   
    }//GEN-LAST:event_button1ActionPerformed
    
    
    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        // TODO add your handling code here:
            ArrayList<Benefice> bl= new ArrayList();
DefaultTableModel model=(DefaultTableModel)tab.getModel();
String[] col = new String[2];
col[0]="Destination";
col[1]="Somme de benefice";
model.setColumnIdentifiers(col);

int rowCount = model.getRowCount();
for (int i = rowCount - 1; i >= 0; i--) {
    model.removeRow(i);
}

            String url = "jdbc:mysql://localhost:3306/projet";
String login="root";
String password="";

try {
   Class.forName("com.mysql.jdbc.Driver");

Connection con = DriverManager.getConnection(url, login, password);
System.out.println("connection validé au DESTINATION \n");
Statement stmt2 = con.createStatement();

PreparedStatement stmt= con.prepareStatement("select destination, SUM(D.benefice) as benefice from reservations R,destinations D\n" +
"where destination=D.NOM AND (MONTH(CURDATE())=MONTH(R.date))\n" +
"group by destination order by benefice desc ;");

ResultSet rs=stmt.executeQuery();
ResultSetMetaData resultMeta = rs.getMetaData();
Benefice b;
while(rs.next()){
    b=new Benefice(rs.getString("destination"),rs.getInt("benefice"));
    bl.add(b);
    //String best = rs.getObject(1).toString();
  
    //System.out.print("\t" + rs.getObject(i).toString() + "\t |");
    }
     
Object[] row = new Object[2];
for(int i=0;i<bl.size();i++){
row[0]=bl.get(i).getDes();
row[1]=bl.get(i).getben();
System.out.println(bl.get(i).getDes()+" "+bl.get(i).getben());
model.addRow(row);
}


 //   return bl;

con.close();
stmt.close();
stmt.close();
stmt2.close();

 // terminer le try
}    catch (Exception e) {
System.out.println(" Attention l'exception : " + e + "est arrivée");
} // fin de la capture de l'exception

        
        
        
    }//GEN-LAST:event_button5ActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        // TODO add your handling code here:
                    ArrayList<Benefice> bl= new ArrayList();
tab.removeAll();

          DefaultTableModel model=(DefaultTableModel)tab.getModel();
String[] col = new String[2];
col[0]="Destination";
col[1]="Nombre de visiteurs";
model.setColumnIdentifiers(col);

int rowCount = model.getRowCount();
for (int i = rowCount - 1; i >= 0; i--) {
    model.removeRow(i);
}


            String url = "jdbc:mysql://localhost:3306/projet";
String login="root";
String password="";

try {
   Class.forName("com.mysql.jdbc.Driver");

Connection con = DriverManager.getConnection(url, login, password);
System.out.println("connection validé au DESTINATION \n");
Statement stmt2 = con.createStatement();

PreparedStatement stmt= con.prepareStatement("select destination, COUNT(*) as nombre_de_visite from reservations R \n" +
"where (MONTH(CURDATE())=MONTH(R.date))\n" +
"group by destination order by nombre_de_visite desc ;");

ResultSet rs=stmt.executeQuery();
ResultSetMetaData resultMeta = rs.getMetaData();
Benefice b;
while(rs.next()){
    b=new Benefice(rs.getString("destination"),rs.getInt("nombre_de_visite"));
    bl.add(b);
    //String best = rs.getObject(1).toString();
  
    //System.out.print("\t" + rs.getObject(i).toString() + "\t |");
    }
     
Object[] row = new Object[2];
for(int i=0;i<bl.size();i++){
row[0]=bl.get(i).getDes();
row[1]=bl.get(i).getben();
System.out.println(bl.get(i).getDes()+" "+bl.get(i).getben());
model.addRow(row);
}


 //   return bl;

con.close();
stmt.close();
stmt.close();
stmt2.close();

 // terminer le try
}    catch (Exception e) {
System.out.println(" Attention l'exception : " + e + "est arrivée");
} // fin de la capture de l'exception



    }//GEN-LAST:event_button7ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        // TODO add your handling code here:
                    ArrayList<Benefice> bl= new ArrayList();
DefaultTableModel model=(DefaultTableModel)tab.getModel();
String[] col = new String[2];
col[0]="Destination";
col[1]="Somme de benefice";
model.setColumnIdentifiers(col);

int rowCount = model.getRowCount();
for (int i = rowCount - 1; i >= 0; i--) {
    model.removeRow(i);
}

            String url = "jdbc:mysql://localhost:3306/projet";
String login="root";
String password="";

try {
   Class.forName("com.mysql.jdbc.Driver");

Connection con = DriverManager.getConnection(url, login, password);
System.out.println("connection validé au DESTINATION \n");
Statement stmt2 = con.createStatement();

PreparedStatement stmt= con.prepareStatement("select destination, SUM(D.benefice) as benefice from reservations R,destinations D\n" +
"where destination=D.NOM AND  (WEEK(CURDATE())=WEEK(R.date))\n" +
"group by destination order by benefice desc ;");

ResultSet rs=stmt.executeQuery();
ResultSetMetaData resultMeta = rs.getMetaData();
Benefice b;
while(rs.next()){
    b=new Benefice(rs.getString("destination"),rs.getInt("benefice"));
    bl.add(b);
    //String best = rs.getObject(1).toString();
  
    //System.out.print("\t" + rs.getObject(i).toString() + "\t |");
    }
     
Object[] row = new Object[2];
for(int i=0;i<bl.size();i++){
row[0]=bl.get(i).getDes();
row[1]=bl.get(i).getben();
System.out.println(bl.get(i).getDes()+" "+bl.get(i).getben());
model.addRow(row);
}


 //   return bl;

con.close();
stmt.close();
stmt.close();
stmt2.close();

 // terminer le try
}    catch (Exception e) {
System.out.println(" Attention l'exception : " + e + "est arrivée");
} // fin de la capture de l'exception

        
        

    }//GEN-LAST:event_button8ActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
        // TODO add your handling code here:
            ArrayList<Benefice> bl= new ArrayList();
DefaultTableModel model=(DefaultTableModel)tab.getModel();
String[] col = new String[2];
col[0]="Destination";
col[1]="Somme de benefice";
model.setColumnIdentifiers(col);

int rowCount = model.getRowCount();
for (int i = rowCount - 1; i >= 0; i--) {
    model.removeRow(i);
}

            String url = "jdbc:mysql://localhost:3306/projet";
String login="root";
String password="";

try {
   Class.forName("com.mysql.jdbc.Driver");

Connection con = DriverManager.getConnection(url, login, password);
System.out.println("connection validé au DESTINATION \n");
Statement stmt2 = con.createStatement();

PreparedStatement stmt= con.prepareStatement("select destination, SUM(D.benefice) as benefice from reservations R,destinations D\n" +
"where destination=D.NOM AND (year(CURDATE())=year(R.date))\n" +
"group by destination order by benefice desc ;");

ResultSet rs=stmt.executeQuery();
ResultSetMetaData resultMeta = rs.getMetaData();
Benefice b;
while(rs.next()){
    b=new Benefice(rs.getString("destination"),rs.getInt("benefice"));
    bl.add(b);
    //String best = rs.getObject(1).toString();
  
    //System.out.print("\t" + rs.getObject(i).toString() + "\t |");
    }
     
Object[] row = new Object[2];
for(int i=0;i<bl.size();i++){
row[0]=bl.get(i).getDes();
row[1]=bl.get(i).getben();
System.out.println(bl.get(i).getDes()+" "+bl.get(i).getben());
model.addRow(row);
}


 //   return bl;

con.close();
stmt.close();
stmt.close();
stmt2.close();

 // terminer le try
}    catch (Exception e) {
System.out.println(" Attention l'exception : " + e + "est arrivée");
} // fin de la capture de l'exception

    }//GEN-LAST:event_button9ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        // TODO add your handling code here:

            ArrayList<Benefice> bl= new ArrayList();
DefaultTableModel model=(DefaultTableModel)tab.getModel();
String[] col = new String[2];
col[0]="Destination";
col[1]="Somme de Benefice";
model.setColumnIdentifiers(col);

int rowCount = model.getRowCount();
for (int i = rowCount - 1; i >= 0; i--) {
    model.removeRow(i);
}

            String url = "jdbc:mysql://localhost:3306/projet";
String login="root";
String password="";

try {
   Class.forName("com.mysql.jdbc.Driver");

Connection con = DriverManager.getConnection(url, login, password);
System.out.println("connection validé au DESTINATION \n");
Statement stmt2 = con.createStatement();

PreparedStatement stmt= con.prepareStatement("select destination, SUM(D.benefice) as benefice from reservations R,destinations D\n" +
"group by destination order by benefice desc ;");

ResultSet rs=stmt.executeQuery();
ResultSetMetaData resultMeta = rs.getMetaData();
Benefice b;
while(rs.next()){
    b=new Benefice(rs.getString("destination"),rs.getInt("benefice"));
    bl.add(b);
    //String best = rs.getObject(1).toString();
  
    //System.out.print("\t" + rs.getObject(i).toString() + "\t |");
    }
     
Object[] row = new Object[2];
for(int i=0;i<bl.size();i++){
row[0]=bl.get(i).getDes();
row[1]=bl.get(i).getben();
System.out.println(bl.get(i).getDes()+" "+bl.get(i).getben());
model.addRow(row);
}


 //   return bl;

con.close();
stmt.close();
stmt.close();
stmt2.close();

 // terminer le try
}    catch (Exception e) {
System.out.println(" Attention l'exception : " + e + "est arrivée");
} // fin de la capture de l'exception

    }//GEN-LAST:event_button2ActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExecutableRequetes().setVisible(true);
            }
        });

    }//GEN-LAST:event_button6ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
             java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new desti2().setVisible(true);
            }
        });
        
    }//GEN-LAST:event_button4ActionPerformed
    /**
     * @param args the command line arguments
     */
       
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionBD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private java.awt.Button button4;
    private java.awt.Button button5;
    private java.awt.Button button6;
    private java.awt.Button button7;
    private java.awt.Button button8;
    private java.awt.Button button9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tab;
    // End of variables declaration//GEN-END:variables
}

